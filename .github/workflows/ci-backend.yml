name: CI Backend Java

on:
  push:
    paths:
      - 'backend-java/**'
      - 'frontend-js/**'
      - 'deploy/**'
  pull_request:
    paths:
      - 'backend-java/**'
      - 'frontend-js/**'
      - 'deploy/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend-java
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: ./mvnw clean package
      - name: Run tests
        run: ./mvnw test
      - name: Build Docker image
        run: docker build -t backend-java .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init & Apply
        working-directory: deploy
        run: |
          terraform init
          terraform apply -auto-approve
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible
      - name: Run Ansible Playbook
        working-directory: deploy
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
        run: |
          public_ip=$(terraform output -raw public_ip)
          echo "$public_ip" > public_ip.txt
          ansible-playbook -i "$public_ip," -u ubuntu --private-key "${{ secrets.SSH_PRIVATE_KEY_PATH }}" playbook.yml
